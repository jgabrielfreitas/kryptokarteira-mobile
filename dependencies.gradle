allprojects {
    repositories {
        jcenter()
    }
}

ext {

    //Android Project Targets
    minSDK = 21
    targetSDK = 26
    compileSDK = 26
    buildToolsVersion = '26.0.2'

    // Kotlin Support
    kotlinJVMTarget = "1.6"
    kotlinVersion = '1.2.10'

    //Libraries
    gsonVersion = '2.7'
    okHttpVersion = '3.8.0'
    retrofitVersion = '2.3.0'
    rxJavaVersion = '2.1.7'
    rxAndroidVersion = '2.0.1'
    supportLibraryVersion = '27.0.1'
    archComponentsVersion = '1.0.3'
    archExtensionsVersion = '1.0.0'
    materialDialogsVersion = '0.9.6.0'
    hawkVersion = '2.0.1'
    kodeinVersion = '4.1.0'

    //Testing
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoKotlinVersion = '1.5.0'
    dexMakerVersion = '2.2.0'
    roboletricVersion = '3.5.1'
    espressoCoreVersion = '3.0.1'
    espressoToolsVersion = '1.0.1'
    baristaVersion = '1.7.0'

    gson = "com.google.code.gson:gson:${gsonVersion}"
    rxJava = "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    rxAndroid = "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    hawk = "com.orhanobut:hawk:${hawkVersion}"

    kotlin = [
            kotlin       : "org.jetbrains.kotlin:kotlin-stdlib-jre7:${kotlinVersion}",
            kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    ]

    kotlinRelated = kotlin.values()

    kodein = [
            kodein : "com.github.salomonbrys.kodein:kodein:${kodeinVersion}",
            kodeinAndroid:"com.github.salomonbrys.kodein:kodein-android:${kodeinVersion}"
    ]

    kodeinRelated = kodein.values()

    retrofit = [
            retrofit             : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitRxJavaAdapter: "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            okHttpLogger         : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    ]

    retrofitRelated = retrofit.values()

    archComponents = [
            archRuntime   : "android.arch.lifecycle:runtime:${archComponentsVersion}",
            archExtensions: "android.arch.lifecycle:extensions:${archExtensionsVersion}"
    ]

    archComponentsRelated = archComponents.values()

    mobileUI = [
            appCompat      : "com.android.support:appcompat-v7:${supportLibraryVersion}",
            design         : "com.android.support:design:${supportLibraryVersion}",
            materialDialogs: "com.afollestad.material-dialogs:core:${materialDialogsVersion}",
    ]

    mobileUIRelated = mobileUI.values()

    unitTestingJavaOnly = [
            junit  : "junit:junit:${jUnitVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
    ]

    unitTestingAndroid = [
            junit        : "junit:junit:${jUnitVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            roboletric   : "org.robolectric:robolectric:${roboletricVersion}",
            mockWebServer: "com.squareup.okhttp3:mockwebserver:${okHttpVersion}"
    ]

    unitTestingAndroidRelated = unitTestingAndroid.values()

    instrumentationTesting = [
            mockito        : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            mockitoDexMaker: "com.linkedin.dexmaker:dexmaker-mockito:${dexMakerVersion}",
            espressoRunner : "com.android.support.test:runner:${espressoToolsVersion}",
            espressoRules  : "com.android.support.test:rules:${espressoToolsVersion}",
            espressoCore   : "com.android.support.test.espresso:espresso-core:${espressoCoreVersion}",
            barista        : "com.schibsted.spain:barista:${baristaVersion}"
    ]

    instrumentationTestingRelated = instrumentationTesting.values()

    mockitoDex = [
            mockito        : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            mockitoDexMaker: "com.linkedin.dexmaker:dexmaker-mockito:${dexMakerVersion}"
    ]

    mockitoDexRelated = mockitoDex.values()

    forceResolution = [
            kotlin        : "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
            kotlinReflect : "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}",
            espressoCore  : "com.android.support.test.espresso:espresso-core:${espressoCoreVersion}",
            espressoRunner: "com.android.support.test:runner:${espressoToolsVersion}",
            espressoRules : "com.android.support.test:rules:${espressoToolsVersion}",
    ]

    toBeForced = forceResolution.values()

}

